apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "devfunapi.fullname" . }}
  labels:
    app: {{ template "devfunapi.name" . }}
    chart: {{ template "devfunapi.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "devfunapi.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "devfunapi.name" . }}
        release: {{ .Release.Name }}
        {{- if and .Values.workloadIdentity.enabled (eq .Values.workloadIdentity.provider "Azure") }}
        azure.workload.identity/use: "true"
        {{- end }}
      annotations:
        buildID: {{ .Values.buildID | quote }}
        prometheus.io/scrape: 'true'
    spec:
      serviceAccountName: devfunapi-service-account
      initContainers:
        - name: "{{ .Chart.Name }}-init"
          image: "groundnuty/k8s-wait-for:v2.0"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: 
          - "job"
          - '{{ template "devfunapi.fullname" . }}-dbdeployment-{{ .Release.Revision }}'
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.deployment.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health/startup
              port: http
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 30
          env:
            {{- $root := . }}
            {{- range $key, $value := .Values.envvariables }}
            - name: {{ $key }}
              value: {{ $value }}
            {{- end }}
            {{- $root := . }}
            {{- range $ref, $values := .Values.secrets }}
            {{- range $key, $value := $values }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ template "devfunapi.fullname" $root }}-{{ $ref | lower }}
                  key: {{ $key }}
            {{- end }}
            {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
