parameters:
- name: azureSubscription
  type: string
  default: 
- name: kubectlVersion
  type: string
  default: 
- name: clusterResourceGroup
  type: string
  default:
- name: clusterName
  type: string
  default: 
- name: clusterNamespace
  type: string
  default: 
- name: releaseName
  type: string
  default: 
- name: azureContainerRegistry
  type: string
  default: 

steps:
- task: KubectlInstaller@0
  inputs:
    kubectlVersion: '$(kubectlVersion)'

- task: Kubernetes@1
  displayName: 'Create Namespace for ${{ parameters.clusterNamespace}}'
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: ${{ parameters.azureSubscription }}
    azureResourceGroup: ${{ parameters.clusterResourceGroup}}
    kubernetesCluster: ${{ parameters.clusterName}}
    useClusterAdmin: true
    command: 'apply'
    useConfigurationFile: true
    configurationType: 'inline'
    inline: |
      kind: Namespace
      apiVersion: v1
      metadata:
        name: ${{ parameters.clusterNamespace}}
      spec: {}
      status: {}
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'
    
- task: Kubernetes@1
  displayName: Add pull secret to namespace
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: ${{ parameters.azureSubscription }}
    azureResourceGroup: ${{ parameters.clusterResourceGroup}}
    kubernetesCluster: ${{ parameters.clusterName}}
    useClusterAdmin: true
    namespace: ${{ parameters.clusterNamespace}}
    command: 'get'
    arguments: 'namespace ${{ parameters.clusterNamespace}}'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'
    azureSubscriptionEndpointForSecrets: ${{ parameters.azureSubscription }}
    azureContainerRegistry: ${{ parameters.azureContainerRegistry}}
    secretName: 'acrauth'